// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package dbgen

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Certificate struct {
	ID                  int64              `db:"id" json:"id"`
	XmlID               pgtype.Text        `db:"xml_id" json:"xml_id"`
	Title               string             `db:"title" json:"title"`
	CreatedBy           int64              `db:"created_by" json:"created_by"`
	UpdatedBy           int64              `db:"updated_by" json:"updated_by"`
	MovedBy             int64              `db:"moved_by" json:"moved_by"`
	CreatedTime         pgtype.Timestamptz `db:"created_time" json:"created_time"`
	UpdatedTime         pgtype.Timestamptz `db:"updated_time" json:"updated_time"`
	MovedTime           pgtype.Timestamptz `db:"moved_time" json:"moved_time"`
	CategoryID          int64              `db:"category_id" json:"category_id"`
	Opened              bool               `db:"opened" json:"opened"`
	PreviousStageID     pgtype.Text        `db:"previous_stage_id" json:"previous_stage_id"`
	Begindate           pgtype.Timestamptz `db:"begindate" json:"begindate"`
	Closedate           pgtype.Timestamptz `db:"closedate" json:"closedate"`
	CompanyID           pgtype.Int8        `db:"company_id" json:"company_id"`
	ContactID           pgtype.Int8        `db:"contact_id" json:"contact_id"`
	Opportunity         pgtype.Numeric     `db:"opportunity" json:"opportunity"`
	IsManualOpportunity bool               `db:"is_manual_opportunity" json:"is_manual_opportunity"`
	TaxValue            pgtype.Numeric     `db:"tax_value" json:"tax_value"`
	CurrencyID          pgtype.Text        `db:"currency_id" json:"currency_id"`
	OpportunityAccount  pgtype.Numeric     `db:"opportunity_account" json:"opportunity_account"`
	TaxValueAccount     pgtype.Numeric     `db:"tax_value_account" json:"tax_value_account"`
	AccountCurrencyID   pgtype.Text        `db:"account_currency_id" json:"account_currency_id"`
	MycompanyID         pgtype.Int8        `db:"mycompany_id" json:"mycompany_id"`
	SourceID            pgtype.Text        `db:"source_id" json:"source_id"`
	SourceDescription   pgtype.Text        `db:"source_description" json:"source_description"`
	WebformID           pgtype.Int8        `db:"webform_id" json:"webform_id"`
	UfUuid              pgtype.UUID        `db:"uf_uuid" json:"uf_uuid"`
	UfInn               pgtype.Text        `db:"uf_inn" json:"uf_inn"`
	UfCompanyName       pgtype.Text        `db:"uf_company_name" json:"uf_company_name"`
	UfNumber            pgtype.Text        `db:"uf_number" json:"uf_number"`
	UfStartDate         pgtype.Timestamptz `db:"uf_start_date" json:"uf_start_date"`
	UfContractDate      pgtype.Timestamptz `db:"uf_contract_date" json:"uf_contract_date"`
	UfEndDate           pgtype.Timestamptz `db:"uf_end_date" json:"uf_end_date"`
	UfStatus            pgtype.Int8        `db:"uf_status" json:"uf_status"`
	UfIdsDocuments      pgtype.Text        `db:"uf_ids_documents" json:"uf_ids_documents"`
	AssignedByID        pgtype.Int8        `db:"assigned_by_id" json:"assigned_by_id"`
	LastActivityBy      pgtype.Int8        `db:"last_activity_by" json:"last_activity_by"`
	LastActivityTime    pgtype.Timestamptz `db:"last_activity_time" json:"last_activity_time"`
	UtmSource           pgtype.Text        `db:"utm_source" json:"utm_source"`
	UtmMedium           pgtype.Text        `db:"utm_medium" json:"utm_medium"`
	UtmCampaign         pgtype.Text        `db:"utm_campaign" json:"utm_campaign"`
	UtmContent          pgtype.Text        `db:"utm_content" json:"utm_content"`
	UtmTerm             pgtype.Text        `db:"utm_term" json:"utm_term"`
	Observers           []int32            `db:"observers" json:"observers"`
	ContactIds          []int32            `db:"contact_ids" json:"contact_ids"`
	EntityTypeID        int64              `db:"entity_type_id" json:"entity_type_id"`
}

type CertificateDocument struct {
	ID            int64              `db:"id" json:"id"`
	CertificateID int64              `db:"certificate_id" json:"certificate_id"`
	Url           string             `db:"url" json:"url"`
	UrlMachine    string             `db:"url_machine" json:"url_machine"`
	CreatedAt     pgtype.Timestamptz `db:"created_at" json:"created_at"`
}
