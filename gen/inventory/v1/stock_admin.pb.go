// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v4.25.3
// source: inventory/v1/stock_admin.proto

package invpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Причины изменения (аудит/аналитика).
type StockChangeReason int32

const (
	StockChangeReason_STOCK_CHANGE_REASON_UNSPECIFIED StockChangeReason = 0
	StockChangeReason_STOCK_CHANGE_RECEIPT            StockChangeReason = 1 // приход/поставка
	StockChangeReason_STOCK_CHANGE_CORRECTION         StockChangeReason = 2 // инвентаризация/коррекция
	StockChangeReason_STOCK_CHANGE_RETURN             StockChangeReason = 3 // клиентский возврат
	StockChangeReason_STOCK_CHANGE_MANUAL             StockChangeReason = 4 // ручная операция
)

// Enum value maps for StockChangeReason.
var (
	StockChangeReason_name = map[int32]string{
		0: "STOCK_CHANGE_REASON_UNSPECIFIED",
		1: "STOCK_CHANGE_RECEIPT",
		2: "STOCK_CHANGE_CORRECTION",
		3: "STOCK_CHANGE_RETURN",
		4: "STOCK_CHANGE_MANUAL",
	}
	StockChangeReason_value = map[string]int32{
		"STOCK_CHANGE_REASON_UNSPECIFIED": 0,
		"STOCK_CHANGE_RECEIPT":            1,
		"STOCK_CHANGE_CORRECTION":         2,
		"STOCK_CHANGE_RETURN":             3,
		"STOCK_CHANGE_MANUAL":             4,
	}
)

func (x StockChangeReason) Enum() *StockChangeReason {
	p := new(StockChangeReason)
	*p = x
	return p
}

func (x StockChangeReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StockChangeReason) Descriptor() protoreflect.EnumDescriptor {
	return file_inventory_v1_stock_admin_proto_enumTypes[0].Descriptor()
}

func (StockChangeReason) Type() protoreflect.EnumType {
	return &file_inventory_v1_stock_admin_proto_enumTypes[0]
}

func (x StockChangeReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StockChangeReason.Descriptor instead.
func (StockChangeReason) EnumDescriptor() ([]byte, []int) {
	return file_inventory_v1_stock_admin_proto_rawDescGZIP(), []int{0}
}

// --- Adjust: инкремент/декремент по конкретной локации ---
type AdjustStockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        int64                  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	LocationCode  string                 `protobuf:"bytes,2,opt,name=location_code,json=locationCode,proto3" json:"location_code,omitempty"`
	Delta         int64                  `protobuf:"varint,3,opt,name=delta,proto3" json:"delta,omitempty"` // может быть <0 или >0, != 0
	Reason        StockChangeReason      `protobuf:"varint,4,opt,name=reason,proto3,enum=inventory.v1.StockChangeReason" json:"reason,omitempty"`
	Reference     string                 `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	AllowNegative bool                   `protobuf:"varint,6,opt,name=allow_negative,json=allowNegative,proto3" json:"allow_negative,omitempty"`  // по умолчанию false
	PrevUpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=prev_updated_at,json=prevUpdatedAt,proto3" json:"prev_updated_at,omitempty"` // оптимистическая блокировка по локации
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdjustStockRequest) Reset() {
	*x = AdjustStockRequest{}
	mi := &file_inventory_v1_stock_admin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdjustStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustStockRequest) ProtoMessage() {}

func (x *AdjustStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_stock_admin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustStockRequest.ProtoReflect.Descriptor instead.
func (*AdjustStockRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_stock_admin_proto_rawDescGZIP(), []int{0}
}

func (x *AdjustStockRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *AdjustStockRequest) GetLocationCode() string {
	if x != nil {
		return x.LocationCode
	}
	return ""
}

func (x *AdjustStockRequest) GetDelta() int64 {
	if x != nil {
		return x.Delta
	}
	return 0
}

func (x *AdjustStockRequest) GetReason() StockChangeReason {
	if x != nil {
		return x.Reason
	}
	return StockChangeReason_STOCK_CHANGE_REASON_UNSPECIFIED
}

func (x *AdjustStockRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *AdjustStockRequest) GetAllowNegative() bool {
	if x != nil {
		return x.AllowNegative
	}
	return false
}

func (x *AdjustStockRequest) GetPrevUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PrevUpdatedAt
	}
	return nil
}

type AdjustStockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stock         *Stock                 `protobuf:"bytes,1,opt,name=stock,proto3" json:"stock,omitempty"` // используем Stock из stock.proto
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdjustStockResponse) Reset() {
	*x = AdjustStockResponse{}
	mi := &file_inventory_v1_stock_admin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdjustStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustStockResponse) ProtoMessage() {}

func (x *AdjustStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_stock_admin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustStockResponse.ProtoReflect.Descriptor instead.
func (*AdjustStockResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_stock_admin_proto_rawDescGZIP(), []int{1}
}

func (x *AdjustStockResponse) GetStock() *Stock {
	if x != nil {
		return x.Stock
	}
	return nil
}

// --- Set: задать точное значение по локации ---
type SetStockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        int64                  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	LocationCode  string                 `protobuf:"bytes,2,opt,name=location_code,json=locationCode,proto3" json:"location_code,omitempty"`
	NewAvailable  int64                  `protobuf:"varint,3,opt,name=new_available,json=newAvailable,proto3" json:"new_available,omitempty"` // >= 0 (если нужно — разрешим <0 через флаг)
	Reason        StockChangeReason      `protobuf:"varint,4,opt,name=reason,proto3,enum=inventory.v1.StockChangeReason" json:"reason,omitempty"`
	Reference     string                 `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	PrevUpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=prev_updated_at,json=prevUpdatedAt,proto3" json:"prev_updated_at,omitempty"` // Идемпотентность: metadata "idempotency-key: <uuid>"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetStockRequest) Reset() {
	*x = SetStockRequest{}
	mi := &file_inventory_v1_stock_admin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStockRequest) ProtoMessage() {}

func (x *SetStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_stock_admin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStockRequest.ProtoReflect.Descriptor instead.
func (*SetStockRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_stock_admin_proto_rawDescGZIP(), []int{2}
}

func (x *SetStockRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SetStockRequest) GetLocationCode() string {
	if x != nil {
		return x.LocationCode
	}
	return ""
}

func (x *SetStockRequest) GetNewAvailable() int64 {
	if x != nil {
		return x.NewAvailable
	}
	return 0
}

func (x *SetStockRequest) GetReason() StockChangeReason {
	if x != nil {
		return x.Reason
	}
	return StockChangeReason_STOCK_CHANGE_REASON_UNSPECIFIED
}

func (x *SetStockRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *SetStockRequest) GetPrevUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PrevUpdatedAt
	}
	return nil
}

type SetStockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stock         *Stock                 `protobuf:"bytes,1,opt,name=stock,proto3" json:"stock,omitempty"` // используем Stock из stock.proto
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetStockResponse) Reset() {
	*x = SetStockResponse{}
	mi := &file_inventory_v1_stock_admin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStockResponse) ProtoMessage() {}

func (x *SetStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_stock_admin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStockResponse.ProtoReflect.Descriptor instead.
func (*SetStockResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_stock_admin_proto_rawDescGZIP(), []int{3}
}

func (x *SetStockResponse) GetStock() *Stock {
	if x != nil {
		return x.Stock
	}
	return nil
}

// --- Batch Adjust ---
type BatchAdjustLine struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        int64                  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	LocationCode  string                 `protobuf:"bytes,2,opt,name=location_code,json=locationCode,proto3" json:"location_code,omitempty"`
	Delta         int64                  `protobuf:"varint,3,opt,name=delta,proto3" json:"delta,omitempty"`
	Reason        StockChangeReason      `protobuf:"varint,4,opt,name=reason,proto3,enum=inventory.v1.StockChangeReason" json:"reason,omitempty"`
	Reference     string                 `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	AllowNegative bool                   `protobuf:"varint,6,opt,name=allow_negative,json=allowNegative,proto3" json:"allow_negative,omitempty"`
	PrevUpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=prev_updated_at,json=prevUpdatedAt,proto3" json:"prev_updated_at,omitempty"` // можно не заполнять
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchAdjustLine) Reset() {
	*x = BatchAdjustLine{}
	mi := &file_inventory_v1_stock_admin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAdjustLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAdjustLine) ProtoMessage() {}

func (x *BatchAdjustLine) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_stock_admin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAdjustLine.ProtoReflect.Descriptor instead.
func (*BatchAdjustLine) Descriptor() ([]byte, []int) {
	return file_inventory_v1_stock_admin_proto_rawDescGZIP(), []int{4}
}

func (x *BatchAdjustLine) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *BatchAdjustLine) GetLocationCode() string {
	if x != nil {
		return x.LocationCode
	}
	return ""
}

func (x *BatchAdjustLine) GetDelta() int64 {
	if x != nil {
		return x.Delta
	}
	return 0
}

func (x *BatchAdjustLine) GetReason() StockChangeReason {
	if x != nil {
		return x.Reason
	}
	return StockChangeReason_STOCK_CHANGE_REASON_UNSPECIFIED
}

func (x *BatchAdjustLine) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *BatchAdjustLine) GetAllowNegative() bool {
	if x != nil {
		return x.AllowNegative
	}
	return false
}

func (x *BatchAdjustLine) GetPrevUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PrevUpdatedAt
	}
	return nil
}

type BatchAdjustStockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lines         []*BatchAdjustLine     `protobuf:"bytes,1,rep,name=lines,proto3" json:"lines,omitempty"` // сервер ограничит размер, напр., до 500
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchAdjustStockRequest) Reset() {
	*x = BatchAdjustStockRequest{}
	mi := &file_inventory_v1_stock_admin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAdjustStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAdjustStockRequest) ProtoMessage() {}

func (x *BatchAdjustStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_stock_admin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAdjustStockRequest.ProtoReflect.Descriptor instead.
func (*BatchAdjustStockRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_stock_admin_proto_rawDescGZIP(), []int{5}
}

func (x *BatchAdjustStockRequest) GetLines() []*BatchAdjustLine {
	if x != nil {
		return x.Lines
	}
	return nil
}

type BatchAdjustStockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stocks        []*Stock               `protobuf:"bytes,1,rep,name=stocks,proto3" json:"stocks,omitempty"` // используем Stock из stock.proto
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchAdjustStockResponse) Reset() {
	*x = BatchAdjustStockResponse{}
	mi := &file_inventory_v1_stock_admin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAdjustStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAdjustStockResponse) ProtoMessage() {}

func (x *BatchAdjustStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_stock_admin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAdjustStockResponse.ProtoReflect.Descriptor instead.
func (*BatchAdjustStockResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_stock_admin_proto_rawDescGZIP(), []int{6}
}

func (x *BatchAdjustStockResponse) GetStocks() []*Stock {
	if x != nil {
		return x.Stocks
	}
	return nil
}

var File_inventory_v1_stock_admin_proto protoreflect.FileDescriptor

const file_inventory_v1_stock_admin_proto_rawDesc = "" +
	"\n" +
	"\x1einventory/v1/stock_admin.proto\x12\finventory.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x18inventory/v1/stock.proto\"\xaa\x02\n" +
	"\x12AdjustStockRequest\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\x03R\x06itemId\x12#\n" +
	"\rlocation_code\x18\x02 \x01(\tR\flocationCode\x12\x14\n" +
	"\x05delta\x18\x03 \x01(\x03R\x05delta\x127\n" +
	"\x06reason\x18\x04 \x01(\x0e2\x1f.inventory.v1.StockChangeReasonR\x06reason\x12\x1c\n" +
	"\treference\x18\x05 \x01(\tR\treference\x12%\n" +
	"\x0eallow_negative\x18\x06 \x01(\bR\rallowNegative\x12B\n" +
	"\x0fprev_updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\rprevUpdatedAt\"@\n" +
	"\x13AdjustStockResponse\x12)\n" +
	"\x05stock\x18\x01 \x01(\v2\x13.inventory.v1.StockR\x05stock\"\x8f\x02\n" +
	"\x0fSetStockRequest\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\x03R\x06itemId\x12#\n" +
	"\rlocation_code\x18\x02 \x01(\tR\flocationCode\x12#\n" +
	"\rnew_available\x18\x03 \x01(\x03R\fnewAvailable\x127\n" +
	"\x06reason\x18\x04 \x01(\x0e2\x1f.inventory.v1.StockChangeReasonR\x06reason\x12\x1c\n" +
	"\treference\x18\x05 \x01(\tR\treference\x12B\n" +
	"\x0fprev_updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\rprevUpdatedAt\"=\n" +
	"\x10SetStockResponse\x12)\n" +
	"\x05stock\x18\x01 \x01(\v2\x13.inventory.v1.StockR\x05stock\"\xa7\x02\n" +
	"\x0fBatchAdjustLine\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\x03R\x06itemId\x12#\n" +
	"\rlocation_code\x18\x02 \x01(\tR\flocationCode\x12\x14\n" +
	"\x05delta\x18\x03 \x01(\x03R\x05delta\x127\n" +
	"\x06reason\x18\x04 \x01(\x0e2\x1f.inventory.v1.StockChangeReasonR\x06reason\x12\x1c\n" +
	"\treference\x18\x05 \x01(\tR\treference\x12%\n" +
	"\x0eallow_negative\x18\x06 \x01(\bR\rallowNegative\x12B\n" +
	"\x0fprev_updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\rprevUpdatedAt\"N\n" +
	"\x17BatchAdjustStockRequest\x123\n" +
	"\x05lines\x18\x01 \x03(\v2\x1d.inventory.v1.BatchAdjustLineR\x05lines\"G\n" +
	"\x18BatchAdjustStockResponse\x12+\n" +
	"\x06stocks\x18\x01 \x03(\v2\x13.inventory.v1.StockR\x06stocks*\xa1\x01\n" +
	"\x11StockChangeReason\x12#\n" +
	"\x1fSTOCK_CHANGE_REASON_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14STOCK_CHANGE_RECEIPT\x10\x01\x12\x1b\n" +
	"\x17STOCK_CHANGE_CORRECTION\x10\x02\x12\x17\n" +
	"\x13STOCK_CHANGE_RETURN\x10\x03\x12\x17\n" +
	"\x13STOCK_CHANGE_MANUAL\x10\x042\x95\x02\n" +
	"\x11StockAdminService\x12R\n" +
	"\vAdjustStock\x12 .inventory.v1.AdjustStockRequest\x1a!.inventory.v1.AdjustStockResponse\x12I\n" +
	"\bSetStock\x12\x1d.inventory.v1.SetStockRequest\x1a\x1e.inventory.v1.SetStockResponse\x12a\n" +
	"\x10BatchAdjustStock\x12%.inventory.v1.BatchAdjustStockRequest\x1a&.inventory.v1.BatchAdjustStockResponseB%Z#ecommerce/v2/gen/inventory/v1;invpbb\x06proto3"

var (
	file_inventory_v1_stock_admin_proto_rawDescOnce sync.Once
	file_inventory_v1_stock_admin_proto_rawDescData []byte
)

func file_inventory_v1_stock_admin_proto_rawDescGZIP() []byte {
	file_inventory_v1_stock_admin_proto_rawDescOnce.Do(func() {
		file_inventory_v1_stock_admin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_inventory_v1_stock_admin_proto_rawDesc), len(file_inventory_v1_stock_admin_proto_rawDesc)))
	})
	return file_inventory_v1_stock_admin_proto_rawDescData
}

var file_inventory_v1_stock_admin_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_inventory_v1_stock_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_inventory_v1_stock_admin_proto_goTypes = []any{
	(StockChangeReason)(0),           // 0: inventory.v1.StockChangeReason
	(*AdjustStockRequest)(nil),       // 1: inventory.v1.AdjustStockRequest
	(*AdjustStockResponse)(nil),      // 2: inventory.v1.AdjustStockResponse
	(*SetStockRequest)(nil),          // 3: inventory.v1.SetStockRequest
	(*SetStockResponse)(nil),         // 4: inventory.v1.SetStockResponse
	(*BatchAdjustLine)(nil),          // 5: inventory.v1.BatchAdjustLine
	(*BatchAdjustStockRequest)(nil),  // 6: inventory.v1.BatchAdjustStockRequest
	(*BatchAdjustStockResponse)(nil), // 7: inventory.v1.BatchAdjustStockResponse
	(*timestamppb.Timestamp)(nil),    // 8: google.protobuf.Timestamp
	(*Stock)(nil),                    // 9: inventory.v1.Stock
}
var file_inventory_v1_stock_admin_proto_depIdxs = []int32{
	0,  // 0: inventory.v1.AdjustStockRequest.reason:type_name -> inventory.v1.StockChangeReason
	8,  // 1: inventory.v1.AdjustStockRequest.prev_updated_at:type_name -> google.protobuf.Timestamp
	9,  // 2: inventory.v1.AdjustStockResponse.stock:type_name -> inventory.v1.Stock
	0,  // 3: inventory.v1.SetStockRequest.reason:type_name -> inventory.v1.StockChangeReason
	8,  // 4: inventory.v1.SetStockRequest.prev_updated_at:type_name -> google.protobuf.Timestamp
	9,  // 5: inventory.v1.SetStockResponse.stock:type_name -> inventory.v1.Stock
	0,  // 6: inventory.v1.BatchAdjustLine.reason:type_name -> inventory.v1.StockChangeReason
	8,  // 7: inventory.v1.BatchAdjustLine.prev_updated_at:type_name -> google.protobuf.Timestamp
	5,  // 8: inventory.v1.BatchAdjustStockRequest.lines:type_name -> inventory.v1.BatchAdjustLine
	9,  // 9: inventory.v1.BatchAdjustStockResponse.stocks:type_name -> inventory.v1.Stock
	1,  // 10: inventory.v1.StockAdminService.AdjustStock:input_type -> inventory.v1.AdjustStockRequest
	3,  // 11: inventory.v1.StockAdminService.SetStock:input_type -> inventory.v1.SetStockRequest
	6,  // 12: inventory.v1.StockAdminService.BatchAdjustStock:input_type -> inventory.v1.BatchAdjustStockRequest
	2,  // 13: inventory.v1.StockAdminService.AdjustStock:output_type -> inventory.v1.AdjustStockResponse
	4,  // 14: inventory.v1.StockAdminService.SetStock:output_type -> inventory.v1.SetStockResponse
	7,  // 15: inventory.v1.StockAdminService.BatchAdjustStock:output_type -> inventory.v1.BatchAdjustStockResponse
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_inventory_v1_stock_admin_proto_init() }
func file_inventory_v1_stock_admin_proto_init() {
	if File_inventory_v1_stock_admin_proto != nil {
		return
	}
	file_inventory_v1_stock_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_inventory_v1_stock_admin_proto_rawDesc), len(file_inventory_v1_stock_admin_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_inventory_v1_stock_admin_proto_goTypes,
		DependencyIndexes: file_inventory_v1_stock_admin_proto_depIdxs,
		EnumInfos:         file_inventory_v1_stock_admin_proto_enumTypes,
		MessageInfos:      file_inventory_v1_stock_admin_proto_msgTypes,
	}.Build()
	File_inventory_v1_stock_admin_proto = out.File
	file_inventory_v1_stock_admin_proto_goTypes = nil
	file_inventory_v1_stock_admin_proto_depIdxs = nil
}
