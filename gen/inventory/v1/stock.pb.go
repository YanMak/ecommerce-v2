// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v4.25.3
// source: inventory/v1/stock.proto

package invpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Агрегированная модель остатков для item_id.
// locations — деталь по складам (если не нужны — можно не заполнять).
type Stock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        int64                  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Available     int64                  `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"` // суммарный доступный остаток по всем локациям
	Locations     []*StockPerLocation    `protobuf:"bytes,3,rep,name=locations,proto3" json:"locations,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stock) Reset() {
	*x = Stock{}
	mi := &file_inventory_v1_stock_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stock) ProtoMessage() {}

func (x *Stock) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_stock_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stock.ProtoReflect.Descriptor instead.
func (*Stock) Descriptor() ([]byte, []int) {
	return file_inventory_v1_stock_proto_rawDescGZIP(), []int{0}
}

func (x *Stock) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *Stock) GetAvailable() int64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *Stock) GetLocations() []*StockPerLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *Stock) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type StockPerLocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LocationCode  string                 `protobuf:"bytes,1,opt,name=location_code,json=locationCode,proto3" json:"location_code,omitempty"` // например "MSK-01"
	Available     int64                  `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockPerLocation) Reset() {
	*x = StockPerLocation{}
	mi := &file_inventory_v1_stock_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockPerLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockPerLocation) ProtoMessage() {}

func (x *StockPerLocation) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_stock_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockPerLocation.ProtoReflect.Descriptor instead.
func (*StockPerLocation) Descriptor() ([]byte, []int) {
	return file_inventory_v1_stock_proto_rawDescGZIP(), []int{1}
}

func (x *StockPerLocation) GetLocationCode() string {
	if x != nil {
		return x.LocationCode
	}
	return ""
}

func (x *StockPerLocation) GetAvailable() int64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *StockPerLocation) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetStockRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	ItemId int64                  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// Если указать location_code — вернём только её (и пересчёт available).
	LocationCode  string `protobuf:"bytes,2,opt,name=location_code,json=locationCode,proto3" json:"location_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStockRequest) Reset() {
	*x = GetStockRequest{}
	mi := &file_inventory_v1_stock_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockRequest) ProtoMessage() {}

func (x *GetStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_stock_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockRequest.ProtoReflect.Descriptor instead.
func (*GetStockRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_stock_proto_rawDescGZIP(), []int{2}
}

func (x *GetStockRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *GetStockRequest) GetLocationCode() string {
	if x != nil {
		return x.LocationCode
	}
	return ""
}

type GetStockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stock         *Stock                 `protobuf:"bytes,1,opt,name=stock,proto3" json:"stock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStockResponse) Reset() {
	*x = GetStockResponse{}
	mi := &file_inventory_v1_stock_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockResponse) ProtoMessage() {}

func (x *GetStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_stock_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockResponse.ProtoReflect.Descriptor instead.
func (*GetStockResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_stock_proto_rawDescGZIP(), []int{3}
}

func (x *GetStockResponse) GetStock() *Stock {
	if x != nil {
		return x.Stock
	}
	return nil
}

type BatchGetStockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemIds       []int64                `protobuf:"varint,1,rep,packed,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`        // до N штук за раз
	LocationCode  string                 `protobuf:"bytes,2,opt,name=location_code,json=locationCode,proto3" json:"location_code,omitempty"` // опционально фильтровать по локации
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetStockRequest) Reset() {
	*x = BatchGetStockRequest{}
	mi := &file_inventory_v1_stock_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetStockRequest) ProtoMessage() {}

func (x *BatchGetStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_stock_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetStockRequest.ProtoReflect.Descriptor instead.
func (*BatchGetStockRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_stock_proto_rawDescGZIP(), []int{4}
}

func (x *BatchGetStockRequest) GetItemIds() []int64 {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

func (x *BatchGetStockRequest) GetLocationCode() string {
	if x != nil {
		return x.LocationCode
	}
	return ""
}

type BatchGetStockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stocks        []*Stock               `protobuf:"bytes,1,rep,name=stocks,proto3" json:"stocks,omitempty"` // порядок тот же, что и в запросе
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetStockResponse) Reset() {
	*x = BatchGetStockResponse{}
	mi := &file_inventory_v1_stock_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetStockResponse) ProtoMessage() {}

func (x *BatchGetStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_stock_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetStockResponse.ProtoReflect.Descriptor instead.
func (*BatchGetStockResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_stock_proto_rawDescGZIP(), []int{5}
}

func (x *BatchGetStockResponse) GetStocks() []*Stock {
	if x != nil {
		return x.Stocks
	}
	return nil
}

var File_inventory_v1_stock_proto protoreflect.FileDescriptor

const file_inventory_v1_stock_proto_rawDesc = "" +
	"\n" +
	"\x18inventory/v1/stock.proto\x12\finventory.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb7\x01\n" +
	"\x05Stock\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\x03R\x06itemId\x12\x1c\n" +
	"\tavailable\x18\x02 \x01(\x03R\tavailable\x12<\n" +
	"\tlocations\x18\x03 \x03(\v2\x1e.inventory.v1.StockPerLocationR\tlocations\x129\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\x90\x01\n" +
	"\x10StockPerLocation\x12#\n" +
	"\rlocation_code\x18\x01 \x01(\tR\flocationCode\x12\x1c\n" +
	"\tavailable\x18\x02 \x01(\x03R\tavailable\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"O\n" +
	"\x0fGetStockRequest\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\x03R\x06itemId\x12#\n" +
	"\rlocation_code\x18\x02 \x01(\tR\flocationCode\"=\n" +
	"\x10GetStockResponse\x12)\n" +
	"\x05stock\x18\x01 \x01(\v2\x13.inventory.v1.StockR\x05stock\"V\n" +
	"\x14BatchGetStockRequest\x12\x19\n" +
	"\bitem_ids\x18\x01 \x03(\x03R\aitemIds\x12#\n" +
	"\rlocation_code\x18\x02 \x01(\tR\flocationCode\"D\n" +
	"\x15BatchGetStockResponse\x12+\n" +
	"\x06stocks\x18\x01 \x03(\v2\x13.inventory.v1.StockR\x06stocks2\xb3\x01\n" +
	"\fStockService\x12I\n" +
	"\bGetStock\x12\x1d.inventory.v1.GetStockRequest\x1a\x1e.inventory.v1.GetStockResponse\x12X\n" +
	"\rBatchGetStock\x12\".inventory.v1.BatchGetStockRequest\x1a#.inventory.v1.BatchGetStockResponseB%Z#ecommerce/v2/gen/inventory/v1;invpbb\x06proto3"

var (
	file_inventory_v1_stock_proto_rawDescOnce sync.Once
	file_inventory_v1_stock_proto_rawDescData []byte
)

func file_inventory_v1_stock_proto_rawDescGZIP() []byte {
	file_inventory_v1_stock_proto_rawDescOnce.Do(func() {
		file_inventory_v1_stock_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_inventory_v1_stock_proto_rawDesc), len(file_inventory_v1_stock_proto_rawDesc)))
	})
	return file_inventory_v1_stock_proto_rawDescData
}

var file_inventory_v1_stock_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_inventory_v1_stock_proto_goTypes = []any{
	(*Stock)(nil),                 // 0: inventory.v1.Stock
	(*StockPerLocation)(nil),      // 1: inventory.v1.StockPerLocation
	(*GetStockRequest)(nil),       // 2: inventory.v1.GetStockRequest
	(*GetStockResponse)(nil),      // 3: inventory.v1.GetStockResponse
	(*BatchGetStockRequest)(nil),  // 4: inventory.v1.BatchGetStockRequest
	(*BatchGetStockResponse)(nil), // 5: inventory.v1.BatchGetStockResponse
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_inventory_v1_stock_proto_depIdxs = []int32{
	1, // 0: inventory.v1.Stock.locations:type_name -> inventory.v1.StockPerLocation
	6, // 1: inventory.v1.Stock.updated_at:type_name -> google.protobuf.Timestamp
	6, // 2: inventory.v1.StockPerLocation.updated_at:type_name -> google.protobuf.Timestamp
	0, // 3: inventory.v1.GetStockResponse.stock:type_name -> inventory.v1.Stock
	0, // 4: inventory.v1.BatchGetStockResponse.stocks:type_name -> inventory.v1.Stock
	2, // 5: inventory.v1.StockService.GetStock:input_type -> inventory.v1.GetStockRequest
	4, // 6: inventory.v1.StockService.BatchGetStock:input_type -> inventory.v1.BatchGetStockRequest
	3, // 7: inventory.v1.StockService.GetStock:output_type -> inventory.v1.GetStockResponse
	5, // 8: inventory.v1.StockService.BatchGetStock:output_type -> inventory.v1.BatchGetStockResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_inventory_v1_stock_proto_init() }
func file_inventory_v1_stock_proto_init() {
	if File_inventory_v1_stock_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_inventory_v1_stock_proto_rawDesc), len(file_inventory_v1_stock_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_inventory_v1_stock_proto_goTypes,
		DependencyIndexes: file_inventory_v1_stock_proto_depIdxs,
		MessageInfos:      file_inventory_v1_stock_proto_msgTypes,
	}.Build()
	File_inventory_v1_stock_proto = out.File
	file_inventory_v1_stock_proto_goTypes = nil
	file_inventory_v1_stock_proto_depIdxs = nil
}
